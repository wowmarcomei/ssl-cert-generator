name: Docker Build and Push

on:
  push:
    branches: [ "master" ]  # 触发器，当推送到master分支时
  pull_request:
    branches: [ "master" ]  # 也可以在PR时触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      if: env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != ''
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/ssl-cert-generator:latest
          ghcr.io/${{ github.repository_owner }}/ssl-cert-generator:${{ steps.date.outputs.date }}
          ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' && format('{0}/ssl-cert-generator:latest', env.DOCKERHUB_USERNAME) || '' }}
          ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' && format('{0}/ssl-cert-generator:{1}', env.DOCKERHUB_USERNAME, steps.date.outputs.date) || '' }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    # 将新缓存移动到旧缓存位置
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache